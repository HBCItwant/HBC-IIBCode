BROKER SCHEMA com.esb.hbc


CREATE COMPUTE MODULE OMS_Early_Return_Pack_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- Process the message only if the NodeType value is DC
		-- IF ( InputRoot.XMLNSC.OrderRelease.OrderLine.Shipnode.NodeType = 'DC' and InputRoot.XMLNSC.OrderRelease.Order.OrderPurpose <> 'REFUND') THEN
		-- Declare OrderPurpose boolean EXISTS ( InputRoot.XMLNSC.OrderRelease.Order.OrderPurpose[]);

		IF EXISTS (InputRoot.XMLNSC.OrderRelease.Order.OrderPurpose[]) THEN
			IF ((InputRoot.XMLNSC.OrderRelease.OrderLine.Shipnode.NodeType = 'DC') and (InputRoot.XMLNSC.OrderRelease.Order.OrderPurpose <> 'REFUND')) THEN
				CALL CopyEntireMessage();
			END IF;
		ELSE
			IF (InputRoot.XMLNSC.OrderRelease.OrderLine.Shipnode.NodeType = 'DC') THEN
				CALL CopyEntireMessage();
				-- SET OutputRoot = InputRoot;
			END IF;
			
			-- verify the input queue name
			DECLARE inputqueueName,envName CHARACTER;
			SET inputqueueName = InputRoot.MQMD.SourceQueue;
			DECLARE i INTEGER;
			SET i = 1;
			X : LOOP 
			  IF i=6 THEN
			  	SET envName = SUBSTRING (inputqueueName AFTER '.');
			    LEAVE X;
			  ELSE
			  	SET inputqueueName = SUBSTRING (inputqueueName AFTER '.');
			  END IF;
			  SET i = i + 1;
			END LOOP X;
			
			-- populate the ouputput message based on the input queue name.
			IF envName = 'LOCAL' THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueManagerName = 'TESTQMGR';
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'TO.OMS.EARLY.RETURNS';
			ELSEIF envName = 'DEV' THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueManagerName = 'MQMIIB2D';
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'MCC.RTRNS.EARLY.OMS.BRK.LTRM.OUTPUT.DEV';
			ELSEIF envName = 'SIT' THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueManagerName = 'MQMIIB2D';
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'MCC.RTRNS.EARLY.OMS.BRK.LTRM.OUTPUT.SIT';
			ELSEIF envName = 'UAT' THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueManagerName = 'MQMIIB2D';
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'MCC.RTRNS.EARLY.OMS.BRK.LTRM.OUTPUT.UAT';
			END IF;
		END IF;



		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		-- DECLARE J INTEGER;
		-- SET J = CARDINALITY(InputRoot.*[]);
		-- WHILE I < J DO
		-- SET OutputRoot.*[I] = InputRoot.*[I];
		-- SET I = I + 1;
		-- END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN

		SET OutputRoot.Properties.CodedCharSetId = 500;
		DECLARE rOutput REFERENCE TO OutputRoot.DFDL;
		CREATE FIELD OutputRoot.DFDL AS rOutput;
		-- Mapping for the SALES-HEADER-RECORD
		-- mapping of element SHR-CRDATE
		
		
		DECLARE ExtnTransactionIDMM,Yr,Mo,Dat CHARACTER;
		DECLARE ExtnTransactionIDD INTEGER;
		DEclare CRDate DATE;
		SET ExtnTransactionIDMM = '20'||SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 15 FOR 2)||'-01-01';
		SET ExtnTransactionIDD = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 17 FOR 3) ;
		SET CRDate = CAST(ExtnTransactionIDMM AS DATE) + CAST((ExtnTransactionIDD-1) AS INTERVAL DAY);
		SET Yr = CAST(EXTRACT(YEAR FROM CRDate) AS CHARACTER);
		SET Mo = CAST(EXTRACT(MONTH FROM CRDate) AS CHARACTER);
		SET Dat = CAST(EXTRACT(DAY FROM CRDate) AS CHARACTER);
		SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_COMPARE_KEY.UHR_CRDATE = Yr||Mo||Dat ;--'20150819'; -- InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID;
		-- SHR-STORE
		SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_COMPARE_KEY.UHR_STORE = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 2 FOR 4);
		-- SHR-TERMINAL
		SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_COMPARE_KEY.UHR_TERMINAL = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 6 FOR 4);
		-- SHR-TRANNUM
		SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_TRANNUM = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 10 FOR 4);
		--SHR-UNIQUE-QUALIFIER mapping not in Fusion
		--SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_UNIQUE_QUALIFIER = '   ';
		-- Starts with Zero for header and increments by 1 for all other records
		-- SHR-RECSEQ
		SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY.UHR_RECSEQ = '00'; -- define shared variable logic
		-- SHR-RECTYPE
		SET rOutput.UNPACKEDHEADERRECORD.UHR_RECTYPE = '00';
		--SHR-COMPANY-CODE
		IF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_COMPANY_CODE = '06';
		ELSEIF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_COMPANY_CODE = '07';
		ELSE
			SET rOutput.UNPACKEDHEADERRECORD.UHR_COMPANY_CODE = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
		END IF;
		-- SHR-ORIG-ASSOCIATE
		SET rOutput.UNPACKEDHEADERRECORD.UHR_ORIG_ASSOCIATE = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 20 FOR 6);
		-- SHR-TIME reformat hhmm
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Createts[]) THEN
			DECLARE CreatetsMM,CreatetsYY CHARACTER;
			SET CreatetsMM = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Createts from 6 for 2);
			SET CreatetsYY = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Createts from 12 for 2);
			SET rOutput.UNPACKEDHEADERRECORD.UHR_TIME = CreatetsMM || CreatetsYY;
		END IF;
	
		--Ringing Assoc As per fusion
		SET rOutput.UNPACKEDHEADERRECORD.UHR_RINGING_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID from 20 FOR 6);
		-- SHR-TRANS-TYPEN
		SET rOutput.UNPACKEDHEADERRECORD.UHR_TRANS_TYPEN = 'CUS';
		-- SHR-TRANS-SOURCE
		SET rOutput.UNPACKEDHEADERRECORD.UHR_TRANS_SOURCE = 'BOR';
		-- SHR-SALES-TAX-BREAKDOWN SHR-TOTAL-SALES-TAX
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine.LinePackListPriceInfo.Tax[]) THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_SALES_TAX_BREAKDOWN.UHR_TOTAL_SALES_TAX = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine.LinePackListPriceInfo.Tax,'.','');
		ELSE
			SET rOutput.UNPACKEDHEADERRECORD.UHR_SALES_TAX_BREAKDOWN.UHR_TOTAL_SALES_TAX = '00000.00';
		END IF;
		-- FILLER
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_FILLER4R = '00000.00';
		-- -- FILLER
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_FILLER4R = '00000.00';
		-- -- FILLER
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_FILLER4R = '00000.00';
		-- SHR-REC-DATE MW to transform the value from (yyyy-MM-dd'T'HH:mi:ssZ) format to the below format YYYYMMDD
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Createts[]) THEN
			DECLARE CreatetsMM,CreatetsYYYY,CreatetsDD CHARACTER;
			SET CreatetsMM = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Createts from 6 for 2);
			SET CreatetsDD = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Createts from 9 for 2);
			SET CreatetsYYYY = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Createts from 1 for 4);
			SET rOutput.UNPACKEDHEADERRECORD.UHR_REC_DATE = CreatetsYYYY || CreatetsMM || CreatetsDD;
		END IF;
		-- Below part Not present in fusion
		-- -- SHR-VOID-BY-TRACER
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_VOID_BY_TRACER = '00000';
		-- -- -- SHR-VOID-REASON
		-- -- SET rOutput.UNPACKEDHEADERRECORD.UHR_VOID_REASON = '  ';
		-- -- -- SHR-PETTY-CASH-MEMO (40)
		-- -- SET rOutput.UNPACKEDHEADERRECORD.UHR_PETTY_CASH_MEMO = '                                            ';
		-- -- -- SHR-GEN-MEMO (40)
		-- -- SET rOutput.UNPACKEDHEADERRECORD.UHR_GEN_MEMO = '                                            ';
		-- -- SHR-REF-DATE PaymentReference4 - "2016-04-08,9250,4153,0789" Value = 20160408
		-- IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType ='CREDIT_CARD_PVT_SAKS')
		-- OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType ='PAYPAL_OFF5')) THEN
		-- -- fetch date before comma
		-- DECLARE PaymentReference4_firstComma CHARACTER;
		-- SET PaymentReference4_firstComma = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentReference4 BEFORE ',');
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_VOID_BY_TRACER = PaymentReference4_firstComma;
		-- END IF;
		-- -- -- SHR-TRAINING-FLAG
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_TRAINING_FLAG = ' ';
		-- -- SHR-SA-VOID-IND
		-- SET rOutput.UNPACKEDHEADERRECORD.UHR_SA_VOID_IND = '0';
		-- SHR-REF-TERM SHR-REF-TRACER
		-- declare cardinality
		DECLARE PaymentTypechild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[]);
		DECLARE ll INTEGER 1;
		WHILE ll <= PaymentTypechild DO
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentType ='CREDIT_CARD_PVT_SAKS')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentType ='PAYPAL_OFF5')) THEN
				-- fetch date after sec comma
				DECLARE PaymentReference4_secComman,PaymentReference4_thirdComman,PaymentReference4_forthComman CHARACTER;
				SET PaymentReference4_secComman = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentReference4 AFTER ',');
				SET PaymentReference4_secComman = SUBSTRING(PaymentReference4_secComman BEFORE ',');
				SET rOutput.UNPACKEDHEADERRECORD.UHR_REF_TERM = TRANSLATE(PaymentReference4_secComman,'-','');
				-- SHR-REF-TRACER
				SET PaymentReference4_thirdComman = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentReference4 AFTER ',');
				SET PaymentReference4_thirdComman = SUBSTRING(PaymentReference4_thirdComman AFTER ',');
				SET PaymentReference4_thirdComman = SUBSTRING(PaymentReference4_thirdComman BEFORE ',');
				SET rOutput.UNPACKEDHEADERRECORD.UHR_REF_TRACER = PaymentReference4_thirdComman;
				-- SHR-REF-STORE
				SET PaymentReference4_forthComman = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[ll].PaymentReference4 AFTER ',');
				SET PaymentReference4_forthComman = SUBSTRING(PaymentReference4_forthComman AFTER ',');
				SET PaymentReference4_forthComman = SUBSTRING(PaymentReference4_forthComman AFTER ',');
				SET rOutput.UNPACKEDHEADERRECORD.UHR_REF_STORE = PaymentReference4_forthComman;
			END IF;
			SET ll = ll + 1;
		END WHILE;
		-- SHR-TRAN-TOTAL-2D
		SET rOutput.UNPACKEDHEADERRECORD.UHR_TRAN_TOTAL_2D = TRANSLATE(InputRoot.XMLNSC.OrderRelease.PackListPriceInfo.TotalAmount,'.','');
		-- TranTotal2DSign logic from fusion - discussion
		-- SHR-OP-CODE
		IF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_OP_CODE = '10';
		ELSEIF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_OP_CODE = '30';
		ELSE
			SET rOutput.UNPACKEDHEADERRECORD.UHR_OP_CODE = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
		END IF;
		-- SHR-DIVISION
		IF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_DIVISION = '6';
		ELSEIF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_DIVISION = '7';
		ELSE
			SET rOutput.UNPACKEDHEADERRECORD.UHR_DIVISION = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

		END IF;
		-- SHR-NAME-PLATE
		IF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_NAME_PLATE = '8';
		ELSEIF InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_NAME_PLATE = '7';
		ELSE
			SET rOutput.UNPACKEDHEADERRECORD.UHR_NAME_PLATE = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

		END IF;
		-- SHR-WEB-ORDER-NUM
		SET rOutput.UNPACKEDHEADERRECORD.UHR_WEB_ORDER_NUM = InputRoot.XMLNSC.OrderRelease.Order.OrderNo;
		-- SHR-INTL-SHIP
		IF InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y' THEN
			SET rOutput.UNPACKEDHEADERRECORD.UHR_INTL_SHIP = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
		END IF;
		-- SHR-WEB-ORDER-DT [MW to transform the value from (yyyy-MM-dd'T'HH:mi:ssZ) format to "CCYYMMDD" date ]
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.OrderDate[]) THEN
			DECLARE CreatetsMM,CreatetsYYYY,CreatetsDD CHARACTER;
			SET CreatetsMM = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 6 for 2);
			SET CreatetsDD = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 9 for 2);
			SET CreatetsYYYY = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 1 for 4);
			SET rOutput.UNPACKEDHEADERRECORD.UHR_WEB_ORDER_DT = CreatetsYYYY || CreatetsMM || CreatetsDD;
		END IF;
		-- SHR-WEB-ORDER-TIME [MW to transform the value from (yyyy-MM-dd'T'HH:mi:ssZ) format to "HHMMSS" time ]
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.OrderDate[]) THEN
			DECLARE CreatetsMM,CreatetsHH,CreatetsSS CHARACTER;
			SET CreatetsMM = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 18 for 2);
			SET CreatetsHH = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 15 for 2);
			SET CreatetsSS = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Order.OrderDate from 21 for 2);
			SET rOutput.UNPACKEDHEADERRECORD.UHR_WEB_ORDER_TIME = CreatetsHH || CreatetsMM || CreatetsSS;
		END IF;
		-- SHR-WEB-ORDER-NO
		SET rOutput.UNPACKEDHEADERRECORD.UHR_WEB_ORDER_NO = InputRoot.XMLNSC.OrderRelease.Order.OrderNo;
		--SHR-RESV-NO [ padding leading ZEROES to make the length as 9 digits.]
		--SET rOutput.UNPACKEDHEADERRECORD.UHR_res = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
		-- SHR-APPROVAL-CODE
		--SALES-DETAIL-RECORD
		-- declare cardinality
		DECLARE OrderLinechild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[]);

		DECLARE DR INTEGER 1; -- variable for Detailed Record.

		DECLARE OL INTEGER 1; -- variable for OrderLine Record.

		WHILE OL <= OrderLinechild DO

			-- Loop for LinePriceInfo
			DECLARE LinePriceInfo INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[]);
			DECLARE LP INTEGER 1;

			WHILE LP <= LinePriceInfo DO
				-- SDR-RECTYPE
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RECTYPE = '05';
				-- SDR-DEPT-CLASS
				DECLARE ExtnDepartment,ExtnClass CHARACTER;
				SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails[OL].Extn.ExtnDepartment from 1 for 3);
				SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails[OL].Extn.ExtnClass from 1 for 3);
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
				-- SDR-VENDOR
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnVendor;
				-- SDR-PRICE
				DECLARE UnitPrice, OrderedPricingQty INTEGER;
				SET UnitPrice = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[LP].UnitPrice,'.','');
				SET OrderedPricingQty = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[LP].OrderedPricingQty,'-','');
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_PRICE = UnitPrice * OrderedPricingQty;
				--UDR_PRICE_SIGN

				IF UnitPrice > 0 THEN

					SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '+';

				ELSEIF UnitPrice < 0 THEN

					SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';

				ELSE

					SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '';
				END IF;
				-- SDR-QTY-0D
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].OrderedQty;
				-- SDR-UPC-NO-13 problem with input
				--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID; -- need correct input value in xml
				-- SDR-INDEX
				IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item[]) THEN
					DECLARE index,UPCCode CHARACTER;
					SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode); 
					IF (UPCCode = 'SKN') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
					END IF;
				END IF;
				-- SDR-ORIG-DTL-ASSOC
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6);
				-- SDR-FREQ-SHOPPER
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
				-- SDR-SEND-ZIP-CODE
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
				-- SDR-TAX-OVERRIDE
				IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
				END IF;
				-- -- SDR_PRIMARY_SALES_ASSOC_ST
				DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
				SET CreateuseridPrimary = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
				SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

				IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
				ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
				ELSEIF LENGTH(CreateuseridPrimary) > 0 THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = CreateuseridPrimary ;
				END IF;
				--SDR-ASSISTING-SALES-ASSOC
				DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
				SET CreateuseridAssist = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') from 10 for 6);
				SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

				IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
				ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
				ELSEIF LENGTH(CreateuseridAssist) > 0 THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = CreateuseridAssist ;
				END IF;
				-- SDR-RINGING-SALES-ASSOC
				DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
				SET CreateuseridRinging = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
				SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

				IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
				ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
				ELSEIF LENGTH(CreateuseridRinging) > 0 THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = CreateuseridRinging ;
				END IF;
				-- SDR-TAX-EXEMPT-ID
				IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
				END IF;

				DECLARE LineTax INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[]);
				DECLARE LT INTEGER 1;

				WHILE LT <= LineTax DO

					IF ((InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].TaxName ='General Sales and Use Tax')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') ;
						IF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') > 0) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '+';

						ELSEIF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') < 0) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '-';

						END IF;

					END IF;
					SET LT = LT + 1;


				END WHILE;
				-- SDR-TRAN-CATEGORY
				IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'SL';
				ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'RTN';
				ELSE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
				END IF;
				-- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" 

				IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
					DECLARE i INTEGER 1;
					DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
					DECLARE count INTEGER;
					SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
					IF count = 1 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = count ;
					END IF;
				END IF;
				-- SDR-CENT-STK
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
				-- SDR-MDSE-STATUS-FLAG
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_MDSE_STATUS_FLAG = '0001';
				-- AssistingSalesAssocSt
				IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 7 FOR 3);
				END IF;
				-- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
				IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 7 FOR 3 );
				END IF;
				-- -- SDR-FASHION-FIX
				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FASHION_FIX = 'N';
				-- -- SDR-LIGHTNING
				-- SDR-LIGHTNING
				IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Store' ) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'L';
				ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Vendor' ) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'D';

				END IF;
				-- SDR-RETURNABLE - element not found in source
				-- SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.,' '); -- need to discuss
				--SDR-ITEM-DESC
				
--				DECLARE orderlinechild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[]);
--				DECLARE k INTEGER 1;
--				WHILE k <= orderlinechild DO
				DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	    
				-- find string lenght
				DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
				SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
			  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
			  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
			  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
			  		 	  		 
				IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
				
				ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
				
				ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
				
				ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
				
				ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
				
				ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
				
				ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
					SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
					SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
				
				ELSE
					SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
				END IF;
--					SET k = k + 1;
--				END WHILE;	
				
				-- SDR-WEB-LINE-NUM
				IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.ExtnWebLineNumber;
				ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].PrimeLineNo;
					--ELSE
					--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = 'POS';
				END IF;


				SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_NON_MERCH_FLAG = '1';

				SET LP = LP + 1;
				SET DR = DR + 1;

			END WHILE;


			IF (LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo.RetailPrice) > 0) AND (LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo.UnitPrice) > 0)

				AND TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo.RetailPrice,'-','') <> TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo.RetailPrice,'-','') THEN

				DECLARE LinePriceInfo INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[]);
				DECLARE LP INTEGER 1;

				WHILE LP <= LinePriceInfo DO
					-- SDR-RECTYPE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RECTYPE = '05';
					-- SDR-DEPT-CLASS
					DECLARE ExtnDepartment,ExtnClass CHARACTER;
					SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails[OL].Extn.ExtnDepartment from 1 for 3);
					SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails[OL].Extn.ExtnClass from 1 for 3);
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '9' ||ExtnDepartment || ExtnClass;
					-- SDR-VENDOR
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnVendor;
					-- SDR-PRICE
					DECLARE UnitPrice, RetailPrice,OrderedPricingQty INTEGER;
					SET RetailPrice = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[LP].UnitPrice,'.',''),'-','');
					SET UnitPrice = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[LP].UnitPrice,'.',''),'-','');
					SET OrderedPricingQty = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LinePriceInfo[LP].OrderedPricingQty,'-','');
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_PRICE = (RetailPrice-UnitPrice) * OrderedPricingQty;
					--UDR_PRICE_SIGN


					SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					-- SDR-QTY-0D
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].OrderedQty;
					-- SDR-UPC-NO-13 problem with input
					--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID; -- need correct input value in xml
					-- SDR-INDEX
					IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item[]) THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode); 
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
						END IF;
					END IF;
					-- SDR-ORIG-DTL-ASSOC
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6);
					-- SDR-FREQ-SHOPPER
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
					-- SDR-SEND-ZIP-CODE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
					-- SDR-TAX-OVERRIDE
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
					END IF;
					-- -- SDR_PRIMARY_SALES_ASSOC_ST
					DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
					SET CreateuseridPrimary = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridPrimary) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = CreateuseridPrimary ;
					END IF;
					--SDR-ASSISTING-SALES-ASSOC
					DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
					SET CreateuseridAssist = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') from 10 for 6);
					SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridAssist) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = CreateuseridAssist ;
					END IF;
					-- SDR-RINGING-SALES-ASSOC
					DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
					SET CreateuseridRinging = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridRinging) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = CreateuseridRinging ;
					END IF;
					-- SDR-TAX-EXEMPT-ID
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
					END IF;

					DECLARE LineTax INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[]);
					DECLARE LT INTEGER 1;

					WHILE LT <= LineTax DO

						IF ((InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].TaxName ='General Sales and Use Tax')) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') ;
							IF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') > 0) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '+';

							ELSEIF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') < 0) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '-';

							END IF;

						END IF;
						SET LT = LT + 1;


					END WHILE;
					-- SDR-TRAN-CATEGORY
					IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'SL';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'RTN';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
					END IF;
					-- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" --Mapping to be added

					IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
						DECLARE i INTEGER 1;
						DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
						DECLARE count INTEGER;
						SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
						IF count = 1 THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
						ELSE
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = count ;
						END IF;
					END IF;
					-- SDR-CENT-STK
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
					-- SDR-MDSE-STATUS-FLAG
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_MDSE_STATUS_FLAG = '0001';
					-- AssistingSalesAssocSt
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 7 FOR 3);
					END IF;
					-- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 7 FOR 3 );
					END IF;
					-- -- SDR-FASHION-FIX
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FASHION_FIX = 'N';
					-- -- SDR-LIGHTNING
					-- SDR-LIGHTNING
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Store' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'L';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Vendor' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'D';

					END IF;
					-- SDR-RETURNABLE - element not found in source
					-- SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.,' '); -- need to discuss
					--SDR-ITEM-DESC
				
					DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	 
					DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
					SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
				  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
				  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
				  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
				  		 	  		 
					IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
					
					ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
					
					ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
					
					ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
					
					ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
					
					ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
					
					ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
						SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
						SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
					
					ELSE
						SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
					END IF;
						-- SDR-WEB-LINE-NUM
					IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.ExtnWebLineNumber;
					ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].PrimeLineNo;
						--ELSE
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = 'POS';
					END IF;
					
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_NON_MERCH_FLAG = '0';


					SET LP = LP + 1;
					SET DR = DR + 1;

				END WHILE;


			END IF;


			DECLARE LinechargesDiscount INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[]);
			DECLARE LCD INTEGER 1;

			WHILE LCD <= LinechargesDiscount DO

				IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory = 'DISCOUNT' THEN
					-- SDR-RECTYPE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RECTYPE = '05';
					-- SDR-DEPT-CLASS
					DECLARE ExtnDepartment,ExtnClass CHARACTER;
					SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnDepartment from 1 for 3);
					SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnClass from 1 for 3);

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'FIRSTDAY' ) THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '7' || ExtnDepartment || ExtnClass;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'DISCOUNT' )
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8'|| ExtnDepartment || ExtnClass;

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995101';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8641';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '878497';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					END IF;

--					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					-- SDR-VENDOR
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE' or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'GIFTWRAPCHARGE') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = '03'; -- dummy value
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnVendor;
					END IF;
					
					-- SDR-PRICE
					DECLARE ChargeAmount INTEGER;
					SET ChargeAmount = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeAmount,'.',''),'-','');
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_PRICE = ChargeAmount ;
					--UDR_PRICE_SIGN

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'DISCOUNT' THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSEIF ChargeAmount > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '+';
					ELSEIF ChargeAmount < 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '';
					END IF;
					-- SDR-QTY-0D
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].OrderedQty;
					-- SDR-UPC-NO-13 problem with input
					
					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'FIRSTDAY' ) THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'DISCOUNT' )
						THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '499534480318';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '486491938136';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCD].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '878497';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					END IF;
					
														
					--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID; -- need correct input value in xml
					
					-- SDR-INDEX
					IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item[]) THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode); -- 1 subscript is kept test only
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
						END IF;
					END IF;
					-- SDR-ORIG-DTL-ASSOC
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6);
					-- SDR-FREQ-SHOPPER
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
					-- SDR-SEND-ZIP-CODE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
					-- SDR-TAX-OVERRIDE
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
					END IF;
					-- -- SDR_PRIMARY_SALES_ASSOC_ST
					DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
					SET CreateuseridPrimary = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridPrimary) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = CreateuseridPrimary ;
					END IF;
					--SDR-ASSISTING-SALES-ASSOC
					DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
					SET CreateuseridAssist = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') from 10 for 6);
					SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridAssist) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = CreateuseridAssist ;
					END IF;
					-- SDR-RINGING-SALES-ASSOC
					DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
					SET CreateuseridRinging = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridRinging) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = CreateuseridRinging ;
					END IF;
					-- SDR-TAX-EXEMPT-ID
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
					END IF;

					DECLARE LineTax INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[]);
					DECLARE LT INTEGER 1;

					WHILE LT <= LineTax DO

						IF ((InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].TaxName ='General Sales and Use Tax')) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') ;
							IF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') > 0) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '+';

							ELSEIF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') < 0) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '-';

							END IF;

						END IF;
						SET LT = LT + 1;


					END WHILE;
					-- SDR-TRAN-CATEGORY
					IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'SL';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'RTN';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
					END IF;
					-- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" --Mapping to be added

					IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
						DECLARE i INTEGER 1;
						DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
						DECLARE count INTEGER;
						SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
						IF count = 1 THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
						ELSE
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = count ;
						END IF;
					END IF;
					-- SDR-CENT-STK
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
					-- SDR-MDSE-STATUS-FLAG
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_MDSE_STATUS_FLAG = '0001';
					-- AssistingSalesAssocSt
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 7 FOR 3);
					END IF;
					-- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 7 FOR 3 );
					END IF;
					-- -- SDR-FASHION-FIX
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FASHION_FIX = 'N';
					-- -- SDR-LIGHTNING
					-- SDR-LIGHTNING
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Store' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'L';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Vendor' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'D';
					END IF;
					-- SDR-RETURNABLE - element not found in source
					-- SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.,' '); -- need to discuss
					--SDR-ITEM-DESC
					-- SDR-WEB-LINE-NUM
					IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.ExtnWebLineNumber;
					ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].PrimeLineNo;
						--ELSE
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = 'POS';
					END IF;
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_NON_MERCH_FLAG = '1';
					SET DR = DR + 1;
				END IF;

				SET LCD = LCD + 1;

			END WHILE;

			DECLARE Linecharges INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[]);
			DECLARE LC INTEGER 1;

			WHILE LC <= Linecharges DO

				IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory = 'SHIPPINGCHARGE' THEN
					-- SDR-RECTYPE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RECTYPE = '05';
					
					

					-- SDR-DEPT-CLASS
					DECLARE ExtnDepartment,ExtnClass CHARACTER;
					SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnDepartment from 1 for 3);
					SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnClass from 1 for 3);

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'FIRSTDAY' ) THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '7' || ExtnDepartment || ExtnClass;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'DISCOUNT' )
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8'|| ExtnDepartment || ExtnClass;

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995101';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8641';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995297';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '878497';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					END IF;
					
--					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = '03';
					
--					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					-- SDR-VENDOR
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE' or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = '03';  -- dummy value
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnVendor;
					END IF;
					
					-- SDR-PRICE
					DECLARE ChargeAmount INTEGER;
					SET ChargeAmount = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeAmount,'.',''),'-','');
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_PRICE = ChargeAmount ;
					--UDR_PRICE_SIGN

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT' THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSEIF ChargeAmount > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '+';
					ELSEIF ChargeAmount < 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '';
					END IF;
					-- SDR-QTY-0D
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].OrderedQty;
					-- SDR-UPC-NO-13 problem with input
					
					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'FIRSTDAY' ) THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'DISCOUNT' )
						THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534480318';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '486491938136';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491536';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457072';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491543';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457089';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491499';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457065';

					ELSE
						 IF (InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491581';
						 ELSEIF(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457096';
						 END IF;
				
					END IF;
					
					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'FIRSTDAY' ) THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode);
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); 
						END IF;
					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'DISCOUNT' )
						THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode);
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); 
						END IF;
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034480318';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '486491938136';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491536';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457072';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491543';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457089';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491499';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457065';

					ELSE 
						IF(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491581';
						ELSEIF (InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS') THEN
  							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457096';
						END IF;		 
						
					END IF;
														
					--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID; -- need correct input value in xml
					
					-- SDR-INDEX
--					IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item[]) THEN
--						DECLARE index,UPCCode CHARACTER;
--						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode); -- 1 subscript is kept test only
--						IF (UPCCode = 'SKN') THEN
--							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
--						END IF;
--					END IF;
					-- SDR-ORIG-DTL-ASSOC
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6);
					-- SDR-FREQ-SHOPPER
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
					-- SDR-SEND-ZIP-CODE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
					-- SDR-TAX-OVERRIDE
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
					END IF;
					-- -- SDR_PRIMARY_SALES_ASSOC_ST
					DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
					SET CreateuseridPrimary = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT')
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'FIRSTDAY' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'F';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT')
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'A';
					END IF;
					IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridPrimary) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = CreateuseridPrimary ;
					END IF;
					--SDR-ASSISTING-SALES-ASSOC
					DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
					SET CreateuseridAssist = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') from 10 for 6);
					SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridAssist) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = CreateuseridAssist ;
					END IF;
					-- SDR-RINGING-SALES-ASSOC
					DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
					SET CreateuseridRinging = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridRinging) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = CreateuseridRinging ;
					END IF;
					-- SDR-TAX-EXEMPT-ID
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
					END IF;

					DECLARE LineTax INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[]);
					DECLARE LT INTEGER 1;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) THEN
						WHILE LT <= LineTax DO
	
							IF ((InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].TaxName ='General Sales and Use Tax')) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') ;
								IF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') > 0) THEN
									SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '+';
								ELSEIF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') < 0) THEN
									SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '-';
								END IF;
							END IF;
							SET LT = LT + 1;
						END WHILE;
					END IF;
					
					-- SDR-TRAN-CATEGORY
					IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'SL';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'RTN';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
					END IF;
					-- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" --Mapping to be added

					IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
						DECLARE i INTEGER 1;
						DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
						DECLARE count INTEGER;
						SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
						IF count = 1 THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
						ELSE
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = count ;
						END IF;
					END IF;
					-- SDR-CENT-STK
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
					-- SDR-MDSE-STATUS-FLAG
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_MDSE_STATUS_FLAG = '0001';
					-- AssistingSalesAssocSt
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 7 FOR 3);
					END IF;
					-- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 7 FOR 3 );
					END IF;
					-- -- SDR-FASHION-FIX
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FASHION_FIX = 'N';
					-- -- SDR-LIGHTNING
					-- SDR-LIGHTNING
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Store' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'L';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Vendor' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'D';
					END IF;
					-- SDR-RETURNABLE - element not found in source
					-- SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.,' '); -- need to discuss
					--SDR-ITEM-DESC
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, 2ND DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, 2ND DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, NEXT DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, NEXT DAY';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, GROUND';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, GROUND';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode <>'') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC <>'') 
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, OTHER';
					END IF;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'DISCOUNT' ) THEN
						DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	 
						DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
						SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  		 	  		 
						IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
						
						ELSE
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
						END IF;
					
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE' ) or (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'FIRSTDAY')THEN
						DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	 
						DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
						SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  		 	  		 
						IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
						
						ELSE
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
						END IF;
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LC].ChargeName = 'ASSOCIATE' ) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'GIFTWRAP DUMMY LOCATOR';	
					END IF;
					-- SDR-WEB-LINE-NUM
					IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.ExtnWebLineNumber;
					ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].PrimeLineNo;
						--ELSE
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = 'POS';
					END IF;


					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_NON_MERCH_FLAG = '0';
					
					SET DR = DR + 1;

				END IF;

				SET LC = LC + 1;

			END WHILE;

			DECLARE LinechargesGift INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[]);
			DECLARE LCG INTEGER 1;

			WHILE LCG <= Linecharges DO

				IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory = 'GIFTWRAPCHARGE' THEN

					-- SDR-RECTYPE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RECTYPE = '05';
					
					

					-- SDR-DEPT-CLASS
					DECLARE ExtnDepartment,ExtnClass CHARACTER;
					SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnDepartment from 1 for 3);
					SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnClass from 1 for 3);

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'FIRSTDAY' ) THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '7' || ExtnDepartment || ExtnClass;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'DISCOUNT' )
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8'|| ExtnDepartment || ExtnClass;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE'  AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995101';

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE'  AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8641';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995201';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '8781';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '995297';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode) > 0 and LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC) > 0) and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = '878497';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					END IF;
					
--					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = '03';
					
--					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = ExtnDepartment || ExtnClass;
					-- SDR-VENDOR
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE' or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = '03';  -- dummy value
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.Extn.ExtnVendor;
					END IF;
					
					-- SDR-PRICE
					DECLARE ChargeAmount INTEGER;
					SET ChargeAmount = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeAmount,'.',''),'-','');
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_PRICE = ChargeAmount ;
					--UDR_PRICE_SIGN

					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT' THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSEIF ChargeAmount > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '+';
					ELSEIF ChargeAmount < 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '-';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_SIGN = '';
					END IF;
					-- SDR-QTY-0D
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].OrderedQty;
					-- SDR-UPC-NO-13 problem with input
					
					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'FIRSTDAY' ) THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'DISCOUNT' )
						THEN

						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534480318';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '486491938136';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491536';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457072';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491543';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457089';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491499';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457065';

					ELSE
						 IF (InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'OFF5') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '499534491581';
						 ELSEIF(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode = 'SAKS') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = '487848457096';
						 END IF;
				
					END IF;
					
					IF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE'
						or InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'FIRSTDAY' ) THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode);
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); 
						END IF;
					ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'DISCOUNT' )
						THEN
						DECLARE index,UPCCode CHARACTER;
						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode);
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_DEPT_CLASS = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID;
						IF (UPCCode = 'SKN') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); 
						END IF;
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034480318';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'GIFTWRAPCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'GIFTWRAPCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '486491938136';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491536';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457072';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491543';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457089';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491499';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457065';

					ELSE 
						IF(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5') THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000034491581';
						ELSEIF (InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS') THEN
  							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '0000048457096';
						END IF;		 
						
					END IF;
														
					--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.ItemID; -- need correct input value in xml
					
					-- SDR-INDEX
--					IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item[]) THEN
--						DECLARE index,UPCCode CHARACTER;
--						SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)UPCCode); -- 1 subscript is kept test only
--						IF (UPCCode = 'SKN') THEN
--							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
--						END IF;
--					END IF;
					-- SDR-ORIG-DTL-ASSOC
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6);
					-- SDR-FREQ-SHOPPER
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
					-- SDR-SEND-ZIP-CODE
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
					-- SDR-TAX-OVERRIDE
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
					END IF;
					-- -- SDR_PRIMARY_SALES_ASSOC_ST
					DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
					SET CreateuseridPrimary = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT')
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'FIRSTDAY' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'F';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT')
						and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'A';
					END IF;
					IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridPrimary) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = CreateuseridPrimary ;
					END IF;
					--SDR-ASSISTING-SALES-ASSOC
					DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
					SET CreateuseridAssist = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') from 10 for 6);
					SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridAssist) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = CreateuseridAssist ;
					END IF;
					-- SDR-RINGING-SALES-ASSOC
					DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
					SET CreateuseridRinging = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') from 10 for 6);
					SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;

					IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
					ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
					ELSEIF LENGTH(CreateuseridRinging) > 0 THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = CreateuseridRinging ;
					END IF;
					-- SDR-TAX-EXEMPT-ID
					IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
					END IF;

					DECLARE LineTax INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[]);
					DECLARE LT INTEGER 1;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) THEN
						WHILE LT <= LineTax DO
	
							IF ((InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].TaxName ='General Sales and Use Tax')) THEN
								SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') ;
								IF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') > 0) THEN
									SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '+';
								ELSEIF (TRANSLATE( TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineTaxes.LineTax[LT].Tax ,'.',''),'-','') < 0) THEN
									SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SALES_TAX.UDR_ITEM_TTL_TAX_SIGN = '-';
								END IF;
							END IF;
							SET LT = LT + 1;
						END WHILE;
					END IF;
					
					-- SDR-TRAN-CATEGORY
					IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'SL';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = 'RTN';
					ELSE
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
					END IF;
					-- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" --Mapping to be added

					IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
						DECLARE i INTEGER 1;
						DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
						DECLARE count INTEGER;
						SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
						IF count = 1 THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
						ELSE
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CUST_INFO_NO = count ;
						END IF;
					END IF;
					-- SDR-CENT-STK
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
					-- SDR-MDSE-STATUS-FLAG
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_MDSE_STATUS_FLAG = '0001';
					-- AssistingSalesAssocSt
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid AFTER ',') FROM 7 FOR 3);
					END IF;
					-- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
					IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Createuserid BEFORE ',') FROM 7 FOR 3 );
					END IF;
					-- -- SDR-FASHION-FIX
					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_FASHION_FIX = 'N';
					-- -- SDR-LIGHTNING
					-- SDR-LIGHTNING
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Store' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'L';
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Shipnode.NodeType = 'Vendor' ) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_LIGHTNING = 'D';
					END IF;
					-- SDR-RETURNABLE - element not found in source
					-- SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.,' '); -- need to discuss
					--SDR-ITEM-DESC
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, 2ND DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='TwoDay' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, 2ND DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, NEXT DAY';

					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Overnight' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, NEXT DAY';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='OFF5')
						THEN

						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, GROUND';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode ='Standard' and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC ='FEDEX') and
						(InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode ='SAKS')
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, GROUND';
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'SHIPPINGCHARGE'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'SHIPPINGCHARGE' ) AND
						(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].CarrierServiceCode <>'') and (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].SCAC <>'') 
						THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'DELIVERY FEE, OTHER';
					END IF;
					
					IF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'DISCOUNT' ) THEN
						DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	 
						DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
						SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  		 	  		 
						IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
						
						ELSE
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
						END IF;
					
					
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE' ) or (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'FIRSTDAY')THEN
						DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;	 
						DECLARE manufacturerNameLen,shortDescriptionLen,colorValueLen,sizeValueLen INTEGER;
						SET manufacturerNameLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET shortDescriptionLen = CAST(LENGTH(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName) as INTEGER DEFAULT 0);
					  	SET colorValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  	SET sizeValueLen 		 = CAST(LENGTH(FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[OL].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value)) as INTEGER DEFAULT 0);
					  		 	  		 
						IF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color || '/' || Size from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen = 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen = 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen > 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Color  from 1 for 40);
						
						ELSEIF ((sizeValueLen > 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription || '/' || Size  from 1 for 40);
						
						ELSEIF ((sizeValueLen = 0) and (manufacturerNameLen > 0 ) and (colorValueLen = 0)) THEN
							SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
							SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[DR].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (UPPER(ManufacturerName) || '/' || ShortDescription  from 1 for 40);
						
						ELSE
							SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = SUBSTRING (ShortDescription  from 1 for 40);			
						END IF;
					ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeCategory= 'DISCOUNT'
						and InputRoot.XMLNSC.OrderRelease.OrderLine[OL].LineCharges.LineCharge[LCG].ChargeName = 'ASSOCIATE' ) THEN
							SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_ITEM_DESC = 'GIFTWRAP DUMMY LOCATOR';	
					END IF;
					-- SDR-WEB-LINE-NUM
					IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].Extn.ExtnWebLineNumber;
					ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
						SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine[OL].PrimeLineNo;
						--ELSE
						--SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_WEB_LINE_NUM = 'POS';
					END IF;


					SET rOutput.UNPACKEDDETAILRECORD[DR].UDR_NON_MERCH_FLAG = '0';

					SET DR = DR + 1;

				END IF;

				SET LCG = LCG + 1;

			END WHILE;


			SET OL = OL + 1;
			--SET DR = DR + 1;

		END WHILE;
		-- SDR-KEY
		--SET rOutput.UNPACKEDHEADERRECORD.UHR_KEY = '';
		-- SDR-RECTYPE
		--SET rOutput.UNPACKEDDETAILRECORD.UDR_RECTYPE = '05';
		-- SDR-DEPT-CLASS [update logic]
		-- DECLARE ExtnDepartment,ExtnClass CHARACTER;
		-- SET ExtnDepartment = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.Extn.ExtnDepartment from 1 for 3);
		-- SET ExtnClass = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.Extn.ExtnClass from 1 for 3);
		-- --SET rOutput.UNPACKEDDETAILRECORD.UDR_DEPT_CLASS = ExtnDepartment || ExtnClass; --mapping pending
		-- -- SDR-VENDOR
		-- --SET rOutput.UNPACKEDDETAILRECORD.UDR_VENDOR = InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.Extn.ExtnVendor;
		-- -- SDR-PRICE
		-- DECLARE UnitPrice, OrderedPricingQty INTEGER;
		-- SET UnitPrice = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine.LinePackListPriceInfo.UnitPrice,'.','');
		-- SET OrderedPricingQty = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine.LinePriceInfo.OrderedPricingQty,'-','');
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE = UnitPrice * OrderedPricingQty;
		-- -- --SDR-PRICE-2D MW to take the value from 05 SDR-PRICE and stamp it in below format: 0000124.92
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_PRICE_2D = ''; -- whhich xml field
		-- -- -- SDR-QTY-0D
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_QTY_0D = InputRoot.XMLNSC.OrderRelease.OrderLine.OrderedQty;
		-- -- -- SDR-QTY-3D
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_QTY_3D = InputRoot.XMLNSC.OrderRelease.OrderLine.OrderedQty; -- no mapping in fusion code
		-- -- -- SDR-UPC-NO-13
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_UPC_NO_13 = InputRoot.XMLNSC.OrderRelease.OrderLine.Item.ItemID; -- need correct input value in xml
		-- -- -- SDR-UPC-NUMBER
		-- -- SET rOutput.UNPACKEDDETAILRECORD= ''; -- mapping pending
		-- -- -- SDR-INDEX
		-- IF EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[1].Item[]) THEN
		-- DECLARE index,UPCCode CHARACTER;
		-- SET UPCCode = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[1].Item.(XMLNSC.Attribute)UPCCode); -- 1 subscript is kept test only
		-- IF (UPCCode = 'SKN') THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_INDEX = '00000' || FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[1].Item.(XMLNSC.Attribute)ItemID); -- pending mapping
		-- END IF;
		-- END IF;
		-- -- -- SDR-PRANG-YNK-SKU
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_PRANG_YNK_SKU = InputRoot.XMLNSC.OrderRelease.OrderLine.Item.ItemID;
		-- -- -- SDR-SDR-CPS-SKU
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_CPS_SKU = InputRoot.XMLNSC.OrderRelease.OrderLine.Item.ItemID;
		-- -- -- SDR-ORIG-DTL-ASSOC
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_ORIG_DTL_ASSOC = SUBSTRING(InputRoot.XMLNSC.OrderRelease.Extn.ExtnTransactionID FROM 20 FOR 6); -- pending mapping logic
		-- -- -- SDR-FREQ-SHOPPER MW should do direct mapping if there is a value, else stamp ZEROES
		-- IF (EXISTS(InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo[]) and (InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo <> '')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_FREQ_SHOPPER = InputRoot.XMLNSC.OrderRelease.Extn.ExtnLoyaltyNo;
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_FREQ_SHOPPER = '0000000';
		-- END IF;
		-- -- -- SDR-SEND-ZIP-CODE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SEND_ZIP_CODE = InputRoot.XMLNSC.OrderRelease.PersonInfoShipTo.ZipCode;
		-- -- -- SDR-TAX-OVERRIDE
		-- IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne = 'Y') THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_TAX_OVERRIDE = InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne;
		-- -- ELSE
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_TAX_OVERRIDE = ' ';
		-- END IF;
		-- -- --SDR-ASSOC-OR-FIRST-DAY
		-- -- IF InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeCategory ='DISCOUNT' THEN
		-- -- IF InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'ASSOCIATE' THEN
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'A';
		-- -- ELSEIF InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'FIRSTDAY' THEN
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = 'F';
		-- -- ELSE
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSOC_OR_FIRST_DAY = ' ';
		-- -- END IF;
		-- -- END IF;
		-- -- -- SDR-SALES-ASSOC-INFORMATION UDR_SD_PRIMARY_SALES_ASSOC_ST
		-- DECLARE CreateuseridPrimary,EnterpriseCodePrimary CHARACTER;
		-- SET CreateuseridPrimary = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid from 10 for 6);
		-- SET EnterpriseCodePrimary = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
		--
		-- IF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'OFF5')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '887893';
		-- ELSEIF ((CreateuseridPrimary = '000000') and (EnterpriseCodePrimary = 'SAKS')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '776898';
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_PRIMARY_SALES_ASSOC = '000000' ;
		-- END IF;
		-- --SDR-ASSISTING-SALES-ASSOC
		-- DECLARE CreateuseridAssist,EnterpriseCodeAssist CHARACTER;
		-- SET CreateuseridAssist = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid from 10 for 6);
		-- SET EnterpriseCodeAssist = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
		--
		-- IF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'OFF5')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '887893';
		-- ELSEIF ((CreateuseridAssist = '000000') and (EnterpriseCodeAssist = 'SAKS')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '776898';
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_ASSISTING_SALES_ASSOC = '000000' ;
		-- END IF;
		-- -- SDR-RINGING-SALES-ASSOC
		-- DECLARE CreateuseridRinging,EnterpriseCodeRinging CHARACTER;
		-- SET CreateuseridRinging = SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid from 10 for 6);
		-- SET EnterpriseCodeRinging = InputRoot.XMLNSC.OrderRelease.Order.EnterpriseCode;
		--
		-- IF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'OFF5')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '887893';
		-- ELSEIF ((CreateuseridRinging = '000000') and (EnterpriseCodeRinging = 'SAKS')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '776898';
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_ASSOC_INFORMATION.UDR_RINGING_SALES_ASSOC = '000000' ;
		-- END IF;
		-- -- -- SDR-ORIGINAL-TRANS-INFO
		-- -- --SET rOutput.UNPACKEDDETAILRECORD.UDR_ORIGINAL_TRANS_INFO = '';
		-- -- -- SDR-TAX-EXEMPT-ID MW to stamp the value based on OrderRelease/Order/Extn/@ExtnIsFiftyOne field.
		-- -- -- If OrderRelease/Order/Extn/@ExtnIsFiftyOne = 'Y', then stamp the value as '0100982885' padded with SPACES at the end, else stamp SPACES
		-- IF (InputRoot.XMLNSC.OrderRelease.Order.Extn.ExtnIsFiftyOne ='Y') THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_TAX.UDR_TAX_EXEMPT_ID = '0100982885';
		-- END IF;
		-- -- -- SDR-ITEM-TOTAL-TAX
		-- DECLARE LineTaxchild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax[]);
		-- DECLARE mm INTEGER 1;
		-- WHILE mm <= LineTaxchild DO
		-- IF ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax[mm].ChargeCategory = 'PRICE') and (InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax[mm].TaxName ='General Sales and Use Tax')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = TRANSLATE(InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax[mm].Tax ,'.','') ;
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = '00000.00';
		-- END IF;
		-- SET mm = mm + 1;
		-- END WHILE;
		-- -- ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax.ChargeCategory = 'SHIPPINGCHARGE') and (InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax.TaxName ='General Sales and Use Tax') THEN
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_SALES_TAX.UDR_ITEM_TOTAL_TAX = SUBSTRING (InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax.Tax FROM 1 for 5) ||SUBSTRING (InputRoot.XMLNSC.OrderRelease.OrderLine.LineTaxes.LineTax.Tax FROM 6 for 2) ;
		-- -- -- SDR-TRAN-CATEGORY
		-- IF InputRoot.XMLNSC.OrderRelease.DocumentType = '0001' THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_TRAN_CATEGORY = 'SL';
		-- ELSEIF (InputRoot.XMLNSC.OrderRelease.DocumentType = '0003') THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_TRAN_CATEGORY = 'RTN';
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_TRAN_CATEGORY = InputRoot.XMLNSC.OrderRelease.DocumentType;
		-- END IF;
		-- -- -- SDR-CUST-INFO-NO Sample: If OrderRelease/@ReleaseNo = "2", then stamp the value as "03" --Mapping to be added
		--
		-- IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
		-- DECLARE i INTEGER 1;
		-- DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
		-- DECLARE count INTEGER;
		-- SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
		-- IF count = 1 THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
		-- ELSE
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_CUST_INFO_NO = count ;
		-- END IF;
		-- END IF;
		-- -- -- SDR-CENT-STK
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_CENT_STK = InputRoot.XMLNSC.OrderRelease.ShipAdviceNo;
		-- -- -- SDR-MDSE-STATUS-FLAG
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_MDSE_STATUS_FLAG = '0001';
		-- -- AssistingSalesAssocSt
		-- IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid AFTER ',') FROM 10 FOR 6 ) <> 000000) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_ASSISTING_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid AFTER ',') FROM 7 FOR 3);
		-- END IF;
		-- -- -- SDR-SALES-ASSOC-INFORMATION MW transformation for this field is given in SDR-SALES-ASSOC-INFORMATION field
		-- IF (SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid BEFORE ',') FROM 10 FOR 6 ) <> 000000) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_SD_PRIMARY_SALES_ASSOC_ST = SUBSTRING(SUBSTRING(InputRoot.XMLNSC.OrderRelease.OrderLine.Createuserid BEFORE ',') FROM 7 FOR 3 );
		-- END IF;
		-- -- -- SDR-FASHION-FIX
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_FASHION_FIX = 'N';
		-- -- -- SDR-LIGHTNING
		-- IF (InputRoot.XMLNSC.OrderRelease.OrderLine.Shipnode.NodeType = 'Store' ) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_LIGHTNING = 'L';
		-- ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine.Shipnode.NodeType = 'Vendor' ) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_LIGHTNING = 'D';
		-- -- ELSE
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_LIGHTNING = ' ';
		-- END IF;
		-- -- -- SDR-RETURNABLE - element not found in source
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_RETURNABLE = COALESCE(InputRoot.XMLNSC.OrderRelease.OrderLine.Extn.,' '); -- need to discuss
		-- -- -- SDR-ITEM-DESC
		-- -- DECLARE ManufacturerName,ShortDescription,Color,Size CHARACTER;
		-- -- DECLARE orderlinechild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.OrderLine[]);
		-- -- DECLARE k INTEGER 1;
		-- -- WHILE k <= orderlinechild DO
		-- --
		-- --
		-- --
		-- -- IF (EXISTS(InputRoot.XMLNSC.OrderRelease.OrderLine[k].LinePriceInfo.UnitPrice[]) and (TRIM(InputRoot.XMLNSC.OrderRelease.OrderLine[k].LinePriceInfo.UnitPrice) <> '')) THEN
		-- --
		-- -- SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
		-- -- SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
		-- -- SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
		-- -- SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
		-- --
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = ManufacturerName || '/' || ShortDescription || '/' || Color || '/' || Size;
		-- --
		-- -- ELSEIF (InputRoot.XMLNSC.OrderRelease.OrderLine.LinePriceInfo.RetailPrice <> InputRoot.XMLNSC.OrderRelease.OrderLine.LinePriceInfo.UnitPrice) THEN
		-- -- SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
		-- -- SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
		-- -- SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
		-- -- SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
		-- --
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = ManufacturerName || '/' || ShortDescription || '/' || Color || '/' || Size;
		-- -- ELSEIF ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeCategory = 'DISCOUNT') and ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'ASSOCIATE' ) or (InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'FIRSTDAY'))) THEN
		-- -- SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
		-- -- SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
		-- -- SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
		-- -- SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
		-- --
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = ManufacturerName || '/' || ShortDescription || '/' || Color || '/' || Size;
		-- -- ELSEIF ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeCategory = 'DISCOUNT') and ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'DISCOUNT' ))) THEN
		-- -- SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
		-- -- SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
		-- -- SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
		-- -- SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
		-- --
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = ManufacturerName || '/' || ShortDescription || '/' || Color || '/' || Size;
		-- -- ELSEIF ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeCategory = 'SHIPPINGCHARGE') and ((InputRoot.XMLNSC.OrderRelease.OrderLine.LineCharges.LineCharge.ChargeName = 'SHIPPINGCHARGE' ))) THEN
		-- -- -- IF ((InputRoot.XMLNSC.OrderRelease.OrderLine.CarrierServiceCode ='Overnight') and (InputRoot.XMLNSC.OrderRelease.OrderLine.SCAC ='FDEX')) THEN
		-- -- -- SET
		-- -- -- ELSEIF ((InputRoot.XMLNSC.OrderRelease.OrderLine.CarrierServiceCode ='Overnight') and (InputRoot.XMLNSC.OrderRelease.OrderLine.SCAC ='FDEX')) THEN
		-- -- --
		-- -- -- SET ManufacturerName = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ManufacturerName);
		-- -- -- SET ShortDescription = UPPER(InputRoot.XMLNSC.OrderRelease.OrderLine.ItemDetails.PrimaryInformation.ShortDescription);
		-- -- -- SET Color = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[1].(XMLNSC.Attribute)Value);
		-- -- -- SET Size = FIELDVALUE(InputRoot.XMLNSC.OrderRelease.OrderLine[k].ItemDetails.AdditionalAttributeList.AdditionalAttribute[2].(XMLNSC.Attribute)Value);
		-- -- --
		-- -- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_ITEM_DESC = ManufacturerName || '/' || ShortDescription || '/' || Color || '/' || Size;
		-- --
		-- --
		-- --
		-- -- END IF;
		-- -- SET k = k + 1;
		-- -- END WHILE;
		-- -- -- SDR-WEB-LINE-NUM
		-- IF (( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Online') OR ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'Call Center')) THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine.Extn.ExtnWebLineNumber;
		-- ELSEIF ( InputRoot.XMLNSC.OrderRelease.Order.EntryType = 'POS') THEN
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_WEB_LINE_NUM = InputRoot.XMLNSC.OrderRelease.OrderLine.PrimeLineNo;
		-- --ELSE
		-- --SET rOutput.UNPACKEDDETAILRECORD.UDR_WEB_LINE_NUM = 'POS';
		-- END IF;
		-- -- SDR-WEB-ORDER-NO
		-- --SET rOutput.UNPACKEDDETAILRECORD.UDR_we
		-- -- SDR-RESV-NO
		-- -- SET rOutput.UNPACKEDDETAILRECORD.UDR_RESV
		-- SET rOutput.UNPACKEDDETAILRECORD.UDR_NON_MERCH_FLAG = '1';
		
		-- SALES-TENDER-RECORD
		DECLARE paymentMethodchild INTEGER CARDINALITY(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[]);
		DECLARE PM INTEGER 1;  -- variable for payment method

		WHILE PM <= paymentMethodchild DO
				
			-- STR-KEY
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_KEY = ''; -- pending mapping
			-- STR-RECTYPE
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RECTYPE = '50';
			-- STR-TENDER-TYPE
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TENDER_TYPE =
				CASE (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardType)
				WHEN ('AMEX') THEN '007'
				WHEN ('DNRS') THEN '010'
				WHEN ('DISC') THEN '008'
				WHEN ('MAST') THEN '005'
				WHEN ('VISA') THEN '006'
				WHEN ('JCB')  THEN '009'
				WHEN ('SAKS') THEN '011'
					-- WHEN ('AMEX') THEN '007
				END;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TENDER_TYPE =
				CASE (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType)
				WHEN ('PAYPAL_OFF5') THEN '053'
				WHEN ('OFF5_EGC') THEN '012'
				WHEN ('OFF5_VGC') THEN '012'
				WHEN ('OFF5_EMC') THEN '049'
					-- WHEN ('AMEX') THEN '007
				END;
			END IF;
			-- STR-CUST-NO
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CUST_NO = '01';
			-- STR-ACCOUNT-NO
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_ACCOUNT_NO = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardNo;
			ELSEIF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_VGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EMC')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_ACCOUNT_NO = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.SvcNo;
			ELSEIF (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'PAYPAL_OFF5') THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_ACCOUNT_NO = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentReference1;
			END IF;
			-- STR-EXPIRATION-DATE -- convert the date for MW to convert the value from MM/YYYY format to MMYY format
			-- IF ( (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') or (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')) THEN
	
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')) THEN
				DECLARE CreditCardExpDateMM,CreditCardExpDateYY CHARACTER;
				SET CreditCardExpDateMM = SUBSTRING (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardExpDate from 1 FOR 2);
				SET CreditCardExpDateYY = SUBSTRING (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardExpDate from 5 FOR 2);
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_EXPIRATION_DATE = CreditCardExpDateMM || CreditCardExpDateYY;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_EXPIRATION_DATE = '0000';
			END IF;
			-- STR-MODE-OF-ENTRY
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_MODE_OF_ENTRY = 'K';
			-- STR-AUTH-CODE
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AUTH_RESPONSE.UTR_AUTH_CODE = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.AuthorizationID;
			-- STR-TENDER-AMOUNT
			SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TENDER_AMOUNT = TRANSLATE(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditAmount,'.','');
--			mapping need to be discuss
			DECLARE ChargeAmount INTEGER;
			SET ChargeAmount = TRANSLATE(TRANSLATE(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod[PM].ChargeTransactionDetail.CreditAmount,'.',''),'-','');
					
			IF (ChargeAmount) > 0 THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TENDER_AMOUNT = '+';
			ELSEIF ChargeAmount < 0 THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TENDER_AMOUNT = '-';
			END IF;
			
			-- STR-CUSTOMER-PHONE
			-- SET rOutput.UNPACKEDTENDERRECORD.UTR_TEND_DATA.UTR_CUST_NO = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.DayPhone;
			--STR-CUST-NAME -- need to get the Logic for L&T & need to fix the logic for repeating PaymentMethods
	
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'PAYPAL_OFF5')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CUST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardName;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CUST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardName;
			END IF;
			--STR-EGC-CODE -- need to get the Logic for L&T
	
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_VGC')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EMC') OR (STARTSWITH(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType, 'PAYPAL_'))) THEN
	
				set rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_EGC_CODE = '0200';
	
			ELSEIF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_EGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_VGC')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_EMC') OR (STARTSWITH(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType, 'PAYPAL_'))) THEN
	
				set rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_EGC_CODE = '0201';
	
			ELSE
	
				set rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_EGC_CODE = '0000';
	
			END IF;
			--STR-AMEX-TRANS-IDENT
	
			IF (EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardType[]) and (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardType = 'AMEX')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AMEX_TRANS_IDENT = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditCardTransactions.CreditCardTransaction.AuthReturnMessage;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AMEX_TRANS_IDENT = '000000000000000';
			END IF;
			--STR-AMEX-POSDATA-CODE
	
			IF (EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardType[]) and (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.CreditCardType = 'AMEX')) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AMEX_POSDATA_CODE = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditCardTransactions.CreditCardTransaction.Reference1;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AMEX_POSDATA_CODE = '000000000000';
			END IF;
			--STR-AVS-RESP
			IF EXISTS(rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AVS_RESP[]) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AVS_RESP = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditCardTransactions.CreditCardTransaction.AuthAvs;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_AVS_RESP = ' ';
			END IF;
			--STR-CID-RESP
			IF EXISTS(rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CID_RESP[]) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CID_RESP = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditCardTransactions.CreditCardTransaction.Reference2;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_CID_RESP = ' ';
			END IF;
			--STR-RMGT-TEND-AMT
			IF EXISTS(rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RMGT_TEND_AMT[]) THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RMGT_TEND_AMT = InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.ChargeTransactionDetail.CreditAmount;
			ELSE
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RMGT_TEND_AMT = '0000000.00';
			END IF;
			
			IF (ChargeAmount) > 0 THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RMGT_TEND_AMT = '+';
			ELSEIF ChargeAmount < 0 THEN
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_RMGT_TEND_AMT = '-';
			END IF;
			--STR-TOKEN-FLAG
	
			IF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_OFF5') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'CREDIT_CARD_PVT_SAKS')
				OR (STARTSWITH(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType, 'PAYPAL_'))) THEN
	
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TOKEN_FLAG = '2';
	
			ELSEIF ((InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_VGC')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'OFF5_EMC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_EGC')
				OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_VGC') OR (InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType = 'SAKS_EMC')
				OR (STARTSWITH(InputRoot.XMLNSC.OrderRelease.Order.PaymentMethods.PaymentMethod.PaymentType, 'PAYPAL_'))) THEN
	
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TOKEN_FLAG = '0';
	
			ELSE
	
				SET rOutput.UNPACKEDTENDERRECORD[PM].UTR_TEND_DATA.UTR_TOKEN_FLAG = '0';
	
			END IF;
			
			
			--STR-WEB-ORDER-NO -- Destination element not found
			--STR-RESV-NO -- Destination element not found
			--STR-APPROVAL-CODE -- Destination element not found
			--STR-WTND-COUNT -- Destination element not found
			SET PM = PM + 1;
		
		END WHILE;  -- end of sale tender record
		--SALES-CUSTOMER-RECORD billto
		
		--SCR-KEY
		
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo[]) THEN
			--SCR-RECTYPE
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_RECTYPE = '70';
		
			--SCR-CUST-INFO-NO
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUST_INFO_NO = '01';
			--SCR-ADDRESS-TYPE
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_ADDRESS_TYPE = 'CI';
			--SCR-CUSTOMER-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.FirstName || ' ' || InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.LastName ;
			--SCR-CUSTOMER-ADDR-1
	
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_ADDR_1 = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.AddressLine1;
			--SCR-CUSTOMER-ADDR-2
			IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.AddressLine2[]) THEN
				SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_ADDR_2 = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.AddressLine2;
	--		ELSE
	--			SET rOutput.UNPACKEDCUSTOMERRECORD.UCR_CUSTOMER_ADDR_2 = '                              ';
			END IF;
			--SCR-CUSTOMER-CITY
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_CITY = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.City;
			--SCR-CUSTOMER-STATE
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_STATE = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.State;
			--SCR-CUSTOMER-ZIP
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_CUSTOMER_ZIP = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.ZipCode;
			--SCR-FIRST-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_FIRST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.FirstName;
			--SCR-LAST-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_LAST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.LastName;
			--SCR-COUNTRY
	
			SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_COUNTRY = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.Country;
			--SCR-PHONE
			IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.DayPhone[]) THEN
				SET rOutput.UNPACKEDCUSTOMERRECORD[1].UCR_PHONE = TRANSLATE(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.DayPhone,'-','');
	--		ELSE
	--			SET rOutput.UNPACKEDCUSTOMERRECORD.UCR_PHONE = '                ';
			END IF;
		END IF;
		
		--SALES-CUSTOMER-RECORD (ShipTo)
		IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo[]) THEN
			
			--SCR-KEY
			--SCR-RECTYPE
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_RECTYPE = '70';
			-- SCR-CUST-INFO-NO complex mapping to be completed
--			DECLARE j INTEGER 1;
--			IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
--			
--				SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUST_INFO_NO = CAST (InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER) + j;
--			END IF;
			IF EXISTS(InputRoot.XMLNSC.OrderRelease.ReleaseNo[]) THEN
					DECLARE i INTEGER 1;
					DECLARE UDR_CUST_INFO_NO CHARACTER '1x34';
					DECLARE count INTEGER;
					SET count = CAST(InputRoot.XMLNSC.OrderRelease.ReleaseNo as INTEGER DEFAULT 0) + i ;
					IF count = 1 THEN
						SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUST_INFO_NO = '0 || CAST(count AS CHARACTER)' ;
					ELSE
						SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUST_INFO_NO = count ;
					END IF;
			END IF;
			--SCR-ADDRESS-TYPE
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_ADDRESS_TYPE = 'ST';
			--SCR-CUSTOMER-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.FirstName || InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.LastName ;
			--SCR-CUSTOMER-ADDR-1
	
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_ADDR_1 = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.AddressLine1;
			--SCR-CUSTOMER-ADDR-2
			IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoBillTo.AddressLine2[]) THEN
				SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_ADDR_2 = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.AddressLine2;
--			ELSE
--				SET rOutput.UNPACKEDCUSTOMERRECORD.UCR_CUSTOMER_ADDR_2 = '                              ';
			END IF;
			--SCR-CUSTOMER-CITY
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_CITY = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.City;
			--SCR-CUSTOMER-STATE
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_STATE = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.State;
			--SCR-CUSTOMER-ZIP
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_CUSTOMER_ZIP = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.ZipCode;
			--SCR-FIRST-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_FIRST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.FirstName;
			--SCR-LAST-NAME
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_LAST_NAME = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.LastName;
			--SCR-COUNTRY
	
			SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_COUNTRY = InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.Country;
			--SCR-PHONE
			
			IF EXISTS(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.DayPhone[]) THEN
				SET rOutput.UNPACKEDCUSTOMERRECORD[2].UCR_PHONE = TRANSLATE(InputRoot.XMLNSC.OrderRelease.Order.PersonInfoShipTo.DayPhone,'-','');
--			ELSE
--				SET rOutput.UNPACKEDCUSTOMERRECORD.UCR_PHONE = '                ';
			END IF;
			-- SCR-WEB-ORDER-NO
			-- SALES-EGC-ACT-RECORD
			-- SEA-KEY
			-- SET rOutput.UNPACKEDEGCACTRECORD.UEA_KEY
		END IF;


	END;

END MODULE;